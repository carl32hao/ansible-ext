// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ansible.proto

/*
Package Ansible is a generated protocol buffer package.

It is generated from these files:
	ansible.proto

It has these top-level messages:
	HostConfigure
	SshInfo
	HostConfigureWithLabel
	CommonReply
	Result
	PlayBook
	Register
	PlayBookItems
	PlayBookMessage
*/
package Ansible

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HostConfigure struct {
	SshInfos []*SshInfo `protobuf:"bytes,1,rep,name=sshInfos" json:"sshInfos,omitempty"`
}

func (m *HostConfigure) Reset()                    { *m = HostConfigure{} }
func (m *HostConfigure) String() string            { return proto.CompactTextString(m) }
func (*HostConfigure) ProtoMessage()               {}
func (*HostConfigure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HostConfigure) GetSshInfos() []*SshInfo {
	if m != nil {
		return m.SshInfos
	}
	return nil
}

type SshInfo struct {
	Host     string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Port     int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	UserName string `protobuf:"bytes,3,opt,name=userName" json:"userName,omitempty"`
	Passwd   string `protobuf:"bytes,4,opt,name=passwd" json:"passwd,omitempty"`
}

func (m *SshInfo) Reset()                    { *m = SshInfo{} }
func (m *SshInfo) String() string            { return proto.CompactTextString(m) }
func (*SshInfo) ProtoMessage()               {}
func (*SshInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SshInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *SshInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *SshInfo) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *SshInfo) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

type HostConfigureWithLabel struct {
	Labels   map[string]string `protobuf:"bytes,1,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SshInfos []*SshInfo        `protobuf:"bytes,2,rep,name=sshInfos" json:"sshInfos,omitempty"`
}

func (m *HostConfigureWithLabel) Reset()                    { *m = HostConfigureWithLabel{} }
func (m *HostConfigureWithLabel) String() string            { return proto.CompactTextString(m) }
func (*HostConfigureWithLabel) ProtoMessage()               {}
func (*HostConfigureWithLabel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *HostConfigureWithLabel) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *HostConfigureWithLabel) GetSshInfos() []*SshInfo {
	if m != nil {
		return m.SshInfos
	}
	return nil
}

type CommonReply struct {
	Results []*Result `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *CommonReply) Reset()                    { *m = CommonReply{} }
func (m *CommonReply) String() string            { return proto.CompactTextString(m) }
func (*CommonReply) ProtoMessage()               {}
func (*CommonReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CommonReply) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type Result struct {
	Host    string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Status  string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Reason  string `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Result) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Result) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Result) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Result) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type PlayBook struct {
	Name     string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version  string            `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Params   map[string]string `protobuf:"bytes,3,rep,name=params" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Hosts    []string          `protobuf:"bytes,4,rep,name=hosts" json:"hosts,omitempty"`
	Register *Register         `protobuf:"bytes,5,opt,name=register" json:"register,omitempty"`
}

func (m *PlayBook) Reset()                    { *m = PlayBook{} }
func (m *PlayBook) String() string            { return proto.CompactTextString(m) }
func (*PlayBook) ProtoMessage()               {}
func (*PlayBook) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PlayBook) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayBook) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *PlayBook) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PlayBook) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *PlayBook) GetRegister() *Register {
	if m != nil {
		return m.Register
	}
	return nil
}

type Register struct {
	ListenPort    int32             `protobuf:"varint,1,opt,name=listenPort" json:"listenPort,omitempty"`
	DataCenter    string            `protobuf:"bytes,2,opt,name=dataCenter" json:"dataCenter,omitempty"`
	ConsulAddress string            `protobuf:"bytes,3,opt,name=consulAddress" json:"consulAddress,omitempty"`
	Labels        map[string]string `protobuf:"bytes,4,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Register) Reset()                    { *m = Register{} }
func (m *Register) String() string            { return proto.CompactTextString(m) }
func (*Register) ProtoMessage()               {}
func (*Register) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Register) GetListenPort() int32 {
	if m != nil {
		return m.ListenPort
	}
	return 0
}

func (m *Register) GetDataCenter() string {
	if m != nil {
		return m.DataCenter
	}
	return ""
}

func (m *Register) GetConsulAddress() string {
	if m != nil {
		return m.ConsulAddress
	}
	return ""
}

func (m *Register) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type PlayBookItems struct {
	Host  string   `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Names []string `protobuf:"bytes,2,rep,name=names" json:"names,omitempty"`
}

func (m *PlayBookItems) Reset()                    { *m = PlayBookItems{} }
func (m *PlayBookItems) String() string            { return proto.CompactTextString(m) }
func (*PlayBookItems) ProtoMessage()               {}
func (*PlayBookItems) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PlayBookItems) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *PlayBookItems) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type PlayBookMessage struct {
	Job      string `protobuf:"bytes,1,opt,name=job" json:"job,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Host     string `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	Step     int32  `protobuf:"varint,4,opt,name=step" json:"step,omitempty"`
	Name     string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Status   string `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	Message  string `protobuf:"bytes,7,opt,name=message" json:"message,omitempty"`
	Ok       int32  `protobuf:"varint,8,opt,name=ok" json:"ok,omitempty"`
	Changed  int32  `protobuf:"varint,9,opt,name=changed" json:"changed,omitempty"`
	Unreach  int32  `protobuf:"varint,10,opt,name=unreach" json:"unreach,omitempty"`
	Failed   int32  `protobuf:"varint,11,opt,name=failed" json:"failed,omitempty"`
	Progress int32  `protobuf:"varint,12,opt,name=progress" json:"progress,omitempty"`
}

func (m *PlayBookMessage) Reset()                    { *m = PlayBookMessage{} }
func (m *PlayBookMessage) String() string            { return proto.CompactTextString(m) }
func (*PlayBookMessage) ProtoMessage()               {}
func (*PlayBookMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PlayBookMessage) GetJob() string {
	if m != nil {
		return m.Job
	}
	return ""
}

func (m *PlayBookMessage) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PlayBookMessage) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *PlayBookMessage) GetStep() int32 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *PlayBookMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayBookMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *PlayBookMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PlayBookMessage) GetOk() int32 {
	if m != nil {
		return m.Ok
	}
	return 0
}

func (m *PlayBookMessage) GetChanged() int32 {
	if m != nil {
		return m.Changed
	}
	return 0
}

func (m *PlayBookMessage) GetUnreach() int32 {
	if m != nil {
		return m.Unreach
	}
	return 0
}

func (m *PlayBookMessage) GetFailed() int32 {
	if m != nil {
		return m.Failed
	}
	return 0
}

func (m *PlayBookMessage) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func init() {
	proto.RegisterType((*HostConfigure)(nil), "Ansible.HostConfigure")
	proto.RegisterType((*SshInfo)(nil), "Ansible.SshInfo")
	proto.RegisterType((*HostConfigureWithLabel)(nil), "Ansible.HostConfigureWithLabel")
	proto.RegisterType((*CommonReply)(nil), "Ansible.CommonReply")
	proto.RegisterType((*Result)(nil), "Ansible.Result")
	proto.RegisterType((*PlayBook)(nil), "Ansible.PlayBook")
	proto.RegisterType((*Register)(nil), "Ansible.Register")
	proto.RegisterType((*PlayBookItems)(nil), "Ansible.PlayBookItems")
	proto.RegisterType((*PlayBookMessage)(nil), "Ansible.PlayBookMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Ansible service

type AnsibleClient interface {
	CheckHost(ctx context.Context, in *HostConfigure, opts ...grpc.CallOption) (*CommonReply, error)
	AddHost(ctx context.Context, in *HostConfigureWithLabel, opts ...grpc.CallOption) (*CommonReply, error)
	//  rpc Play (PlayBook) returns (stream PlayBookMessage) {
	//      option (google.api.http) = {
	//      post: "/v1/ansible/play"
	//      body: "*"
	//    };
	//  }
	RunPlayBook(ctx context.Context, in *PlayBook, opts ...grpc.CallOption) (Ansible_RunPlayBookClient, error)
}

type ansibleClient struct {
	cc *grpc.ClientConn
}

func NewAnsibleClient(cc *grpc.ClientConn) AnsibleClient {
	return &ansibleClient{cc}
}

func (c *ansibleClient) CheckHost(ctx context.Context, in *HostConfigure, opts ...grpc.CallOption) (*CommonReply, error) {
	out := new(CommonReply)
	err := grpc.Invoke(ctx, "/Ansible.Ansible/CheckHost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ansibleClient) AddHost(ctx context.Context, in *HostConfigureWithLabel, opts ...grpc.CallOption) (*CommonReply, error) {
	out := new(CommonReply)
	err := grpc.Invoke(ctx, "/Ansible.Ansible/AddHost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ansibleClient) RunPlayBook(ctx context.Context, in *PlayBook, opts ...grpc.CallOption) (Ansible_RunPlayBookClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Ansible_serviceDesc.Streams[0], c.cc, "/Ansible.Ansible/RunPlayBook", opts...)
	if err != nil {
		return nil, err
	}
	x := &ansibleRunPlayBookClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Ansible_RunPlayBookClient interface {
	Recv() (*PlayBookMessage, error)
	grpc.ClientStream
}

type ansibleRunPlayBookClient struct {
	grpc.ClientStream
}

func (x *ansibleRunPlayBookClient) Recv() (*PlayBookMessage, error) {
	m := new(PlayBookMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Ansible service

type AnsibleServer interface {
	CheckHost(context.Context, *HostConfigure) (*CommonReply, error)
	AddHost(context.Context, *HostConfigureWithLabel) (*CommonReply, error)
	//  rpc Play (PlayBook) returns (stream PlayBookMessage) {
	//      option (google.api.http) = {
	//      post: "/v1/ansible/play"
	//      body: "*"
	//    };
	//  }
	RunPlayBook(*PlayBook, Ansible_RunPlayBookServer) error
}

func RegisterAnsibleServer(s *grpc.Server, srv AnsibleServer) {
	s.RegisterService(&_Ansible_serviceDesc, srv)
}

func _Ansible_CheckHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HostConfigure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnsibleServer).CheckHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Ansible.Ansible/CheckHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnsibleServer).CheckHost(ctx, req.(*HostConfigure))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ansible_AddHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HostConfigureWithLabel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnsibleServer).AddHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Ansible.Ansible/AddHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnsibleServer).AddHost(ctx, req.(*HostConfigureWithLabel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ansible_RunPlayBook_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PlayBook)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AnsibleServer).RunPlayBook(m, &ansibleRunPlayBookServer{stream})
}

type Ansible_RunPlayBookServer interface {
	Send(*PlayBookMessage) error
	grpc.ServerStream
}

type ansibleRunPlayBookServer struct {
	grpc.ServerStream
}

func (x *ansibleRunPlayBookServer) Send(m *PlayBookMessage) error {
	return x.ServerStream.SendMsg(m)
}

var _Ansible_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Ansible.Ansible",
	HandlerType: (*AnsibleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckHost",
			Handler:    _Ansible_CheckHost_Handler,
		},
		{
			MethodName: "AddHost",
			Handler:    _Ansible_AddHost_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RunPlayBook",
			Handler:       _Ansible_RunPlayBook_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ansible.proto",
}

func init() { proto.RegisterFile("ansible.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 795 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x06, 0xa9, 0xff, 0x91, 0x55, 0xdb, 0x0b, 0xd7, 0x20, 0x84, 0xb6, 0x16, 0x88, 0x1a, 0x50,
	0xdd, 0x5a, 0x72, 0x55, 0x14, 0xb0, 0x0d, 0xf4, 0x60, 0x0b, 0x05, 0x6c, 0xa0, 0x0d, 0x04, 0xe6,
	0x90, 0x63, 0xb2, 0x14, 0x57, 0x14, 0x2d, 0x6a, 0x97, 0xe0, 0x2e, 0x9d, 0x08, 0x86, 0x2f, 0x79,
	0x85, 0x9c, 0xf3, 0x2c, 0xb9, 0xe5, 0x05, 0xf2, 0x06, 0x41, 0xee, 0x79, 0x85, 0x60, 0x97, 0xbb,
	0x8c, 0x64, 0xcb, 0x30, 0x82, 0x5c, 0x84, 0xf9, 0x66, 0x76, 0xe7, 0xdb, 0x99, 0xf9, 0x38, 0x82,
	0x16, 0xa6, 0x3c, 0xf2, 0x63, 0xd2, 0x4b, 0x52, 0x26, 0x18, 0xaa, 0x9d, 0xe5, 0xb0, 0xfd, 0x53,
	0xc8, 0x58, 0x18, 0x93, 0x3e, 0x4e, 0xa2, 0x3e, 0xa6, 0x94, 0x09, 0x2c, 0x22, 0x46, 0x79, 0x7e,
	0xcc, 0xfd, 0x07, 0x5a, 0x17, 0x8c, 0x8b, 0x21, 0xa3, 0x93, 0x28, 0xcc, 0x52, 0x82, 0xfe, 0x80,
	0x3a, 0xe7, 0xd3, 0x4b, 0x3a, 0x61, 0xdc, 0xb1, 0x3a, 0xa5, 0x6e, 0x73, 0xb0, 0xd5, 0xd3, 0xa9,
	0x7a, 0x4f, 0xf3, 0x80, 0x57, 0x9c, 0x70, 0x09, 0xd4, 0xb4, 0x13, 0x21, 0x28, 0x4f, 0x19, 0x17,
	0x8e, 0xd5, 0xb1, 0xba, 0x0d, 0x4f, 0xd9, 0xd2, 0x97, 0xb0, 0x54, 0x38, 0x76, 0xc7, 0xea, 0x56,
	0x3c, 0x65, 0xa3, 0x36, 0xd4, 0x33, 0x4e, 0xd2, 0x27, 0x78, 0x4e, 0x9c, 0x92, 0x3a, 0x5b, 0x60,
	0xb4, 0x0b, 0xd5, 0x04, 0x73, 0xfe, 0x32, 0x70, 0xca, 0x2a, 0xa2, 0x91, 0xfb, 0xde, 0x82, 0xdd,
	0x95, 0x67, 0x3e, 0x8b, 0xc4, 0xf4, 0x3f, 0xec, 0x93, 0x18, 0x0d, 0xa1, 0x1a, 0x4b, 0xc3, 0xbc,
	0xf6, 0xf7, 0xe2, 0xb5, 0xeb, 0x2f, 0xf4, 0xd4, 0x2f, 0xff, 0x97, 0x8a, 0x74, 0xe1, 0xe9, 0xab,
	0x2b, 0x45, 0xdb, 0x8f, 0x15, 0xdd, 0x3e, 0x81, 0xe6, 0x52, 0x12, 0xb4, 0x05, 0xa5, 0x19, 0x59,
	0xe8, 0xba, 0xa5, 0x89, 0x76, 0xa0, 0x72, 0x8d, 0xe3, 0x8c, 0xa8, 0xba, 0x1b, 0x5e, 0x0e, 0x4e,
	0xed, 0x63, 0xcb, 0x3d, 0x86, 0xe6, 0x90, 0xcd, 0xe7, 0x8c, 0x7a, 0x24, 0x89, 0x17, 0xe8, 0x37,
	0xa8, 0xa5, 0x84, 0x67, 0xb1, 0x30, 0xaf, 0xdf, 0x2c, 0x68, 0x3d, 0xe5, 0xf7, 0x4c, 0xdc, 0x9d,
	0x40, 0x35, 0x77, 0xad, 0x6d, 0xf4, 0x2e, 0x54, 0xb9, 0xc0, 0x22, 0xe3, 0x9a, 0x52, 0x23, 0xe4,
	0x40, 0x6d, 0x4e, 0x38, 0xc7, 0xa1, 0xe9, 0xb5, 0x81, 0xf2, 0x46, 0x4a, 0x30, 0x67, 0xd4, 0xb4,
	0x3a, 0x47, 0xee, 0x67, 0x0b, 0xea, 0xa3, 0x18, 0x2f, 0xce, 0x19, 0x9b, 0x49, 0x2a, 0x2a, 0xe7,
	0xa4, 0xa9, 0xa4, 0x2d, 0x53, 0x5e, 0x93, 0x94, 0x47, 0x8c, 0x6a, 0x2e, 0x03, 0xd1, 0xdf, 0x72,
	0x7a, 0x29, 0x9e, 0x73, 0xa7, 0xa4, 0x8a, 0xf9, 0xb9, 0x28, 0xc6, 0x24, 0xec, 0x8d, 0x54, 0x5c,
	0x37, 0x3f, 0x3f, 0x2c, 0xbb, 0x25, 0x6b, 0xe0, 0x4e, 0xb9, 0x53, 0x92, 0xdd, 0x52, 0x00, 0x1d,
	0x42, 0x3d, 0x25, 0x61, 0xc4, 0x05, 0x49, 0x9d, 0x4a, 0xc7, 0xea, 0x36, 0x07, 0xdb, 0x4b, 0xbd,
	0xc9, 0x03, 0x5e, 0x71, 0x44, 0xce, 0x64, 0x29, 0xf7, 0x37, 0xcd, 0xe4, 0xa3, 0x05, 0x75, 0x93,
	0x11, 0xfd, 0x02, 0x10, 0x4b, 0x8b, 0x8e, 0xa4, 0x6e, 0x2d, 0xa5, 0xdb, 0x25, 0x8f, 0x8c, 0x07,
	0x58, 0xe0, 0x21, 0xa1, 0xf2, 0x61, 0x79, 0xae, 0x25, 0x0f, 0xfa, 0x15, 0x5a, 0x63, 0x46, 0x79,
	0x16, 0x9f, 0x05, 0x41, 0x4a, 0x38, 0xd7, 0x6d, 0x5f, 0x75, 0xca, 0x4e, 0x69, 0xd1, 0x96, 0xef,
	0x74, 0xca, 0x3c, 0x64, 0x9d, 0x4c, 0xbf, 0x47, 0x78, 0x27, 0xd0, 0x32, 0x43, 0xb8, 0x14, 0x64,
	0xce, 0xd7, 0xaa, 0x68, 0x07, 0x2a, 0x72, 0xc4, 0xf9, 0x37, 0xd0, 0xf0, 0x72, 0xe0, 0xbe, 0xb5,
	0x61, 0xd3, 0xdc, 0xfd, 0x5f, 0xab, 0x67, 0x0b, 0x4a, 0x57, 0xcc, 0x37, 0xd4, 0x57, 0xcc, 0x97,
	0xf9, 0xc4, 0x22, 0x31, 0xcc, 0xca, 0x2e, 0x38, 0x4a, 0xab, 0x2b, 0x81, 0x0b, 0x92, 0x28, 0xd5,
	0x55, 0x3c, 0x65, 0x17, 0x32, 0xab, 0x2c, 0xc9, 0xec, 0xab, 0xa2, 0xab, 0x0f, 0x29, 0xba, 0xb6,
	0xaa, 0xe8, 0x1f, 0xc0, 0x66, 0x33, 0xa7, 0xae, 0xf2, 0xda, 0x6c, 0x26, 0x4f, 0x8e, 0xa7, 0x98,
	0x86, 0x24, 0x70, 0x1a, 0xca, 0x69, 0xa0, 0x8c, 0x64, 0x34, 0x25, 0x78, 0x3c, 0x75, 0x20, 0x8f,
	0x68, 0x28, 0x59, 0x27, 0x38, 0x8a, 0x49, 0xe0, 0x34, 0x55, 0x40, 0x23, 0xb9, 0xb4, 0x92, 0x94,
	0x85, 0x6a, 0xa2, 0x1b, 0x2a, 0x52, 0xe0, 0xc1, 0x3b, 0x1b, 0xcc, 0xb2, 0x45, 0x2f, 0xa0, 0x31,
	0x9c, 0x92, 0xf1, 0xec, 0x42, 0x7d, 0x94, 0xeb, 0x57, 0x51, 0x7b, 0xa7, 0xf0, 0x2f, 0xed, 0x02,
	0x77, 0xff, 0xf5, 0x87, 0x4f, 0x6f, 0xec, 0x3d, 0xb7, 0xad, 0x36, 0xf5, 0xf5, 0x9f, 0x7d, 0xbd,
	0xcf, 0xfb, 0xb2, 0x6d, 0xcf, 0xc7, 0x32, 0xeb, 0xa9, 0x75, 0x80, 0x7c, 0xa8, 0x9d, 0x05, 0x81,
	0xca, 0xbf, 0xf7, 0xc8, 0xaa, 0x7b, 0x80, 0xa8, 0xa3, 0x88, 0xda, 0xee, 0x8f, 0xeb, 0x88, 0xb8,
	0xe4, 0xa0, 0xd0, 0xf4, 0x32, 0x5a, 0x6c, 0x81, 0xed, 0x7b, 0xdf, 0x71, 0xdb, 0xb9, 0xe7, 0xd2,
	0xca, 0x70, 0x8f, 0x54, 0xf6, 0x03, 0x77, 0xff, 0x6e, 0xf6, 0x24, 0xc6, 0x8b, 0xfe, 0x8d, 0x9c,
	0xed, 0x6d, 0xff, 0x46, 0xaf, 0x8c, 0xdb, 0x53, 0xeb, 0xe0, 0xc8, 0x3a, 0x1f, 0x40, 0x67, 0xcc,
	0xe6, 0x3d, 0x3f, 0xa2, 0xa1, 0x8f, 0x7d, 0xdc, 0xd3, 0x57, 0x0e, 0xc9, 0x2b, 0x61, 0xec, 0xf3,
	0x0d, 0x4d, 0x38, 0x92, 0x7f, 0x5b, 0x23, 0xcb, 0xaf, 0xaa, 0xff, 0xaf, 0xbf, 0xbe, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x35, 0xc9, 0xec, 0x5b, 0xf7, 0x06, 0x00, 0x00,
}
